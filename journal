= 13/02 //(JBY)// =

Réflexions sur la modularité. Un schéma a été construit.

== Objectifs pour la semaine suivante ==

Pour la semaine du 20 spécification d'un jeu minimal (dans ses aspects 
graphiques : proposition un personnage controlé dans des murs avec un 
poursuivant), pour identifier les modules essentiels et envisager un calendrier 
de spécification sur les modules essentiels et ensuite un calendrier de 
réalisation.

= 20/02 //(Stefano)//=

Nous avons ecrit les spécifications (de maniere informelle) de deux jeux afin 
de voir de suite ce qui peut etre factorise et dessine un diagramme temporel 
des differentes actions des modules pendant une //game loop//.

Un debut de recherche sur les frameworks de tests unitaires pour c++ a permit 
de decouvrir UnitTest++, plus de recherches permettront de fixer notre choix 
dans la semaine.

Les deux jeux sont :
# **Cat'n'mouse** : Le jeu du chat et de la souris. Le joueur (chat) doit 
  attraper la souris qui se balade dans une pièce avec des murs. Se joue au 
  clavier.  
# Dodger : Jeu de reflèxes, où le joueur doit éviter des objets tout en tirant 
  sur d'autres. Jouable à la souris.  

Les spécifications sont disponibles dans le dossier ``examples``. De grandes 
questions se sont posées sur les évènements et collisions, à débattre.

== Objectifs pour la semaine suivante ==

- Ecrire des diagrammes plus standardises (UML) et identifier :
  -- Les dependances entres les modules de la //game loop//.
  -- Identifier ce qui sera facile a modifier dans le futur et ce qui devra 
     etre fixe des le debut.
- Commencer le developpement pour definir les interfaces de facon plus
  concrete. (Pas forcement de jeu fonctionnel, mais au moins les interfaces des 
  modules)
- Choisir un framework de tests unitaires et ecrire les tests necessaires a 
  cette premiere iteration.

== Notes ==
e
Julien sera au ski du 22/02 au 02/03 mais aura internet. Nous procederons 
donc avec une sorte de //peer programming// adapte. Nicolas codera normalement. 
Julien commentera le code chaque soir et ecrira les tests unitaires pour les 
modules implementes.

= 27/02 =

= 06/02 =

= 13/02 =