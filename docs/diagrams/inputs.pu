@startuml

title Input handling process

participant State

box "Controller" #SkyBlue
    participant Controller
    participant ControlHandler
    participant Translator
endbox

== suscribing ==
State --> Controller: suscribe(input, command)
activate Controller

Controller --> ControlHandler : addToFilter(input)
'activate ControlHandler

Controller --> Translator : addBinding(input, command)
'deactivate ControlHandler
'activate Translator

State <-- Controller
'deactivate Translator
deactivate Controller


== handle inputs and commands ==

State -> Controller : getQueue
activate Controller

Controller -> ControlHandler : handle
note right: ControlHandler is a Filter that checks if suscribed Input occurred
activate ControlHandler
Controller <- ControlHandler : filtered inputs
deactivate ControlHandler

Controller -> Translator : getCommand
activate Translator
Controller <- Translator : commands for inputs that occured
deactivate Translator

State <- Controller : queue of Command to perform
deactivate Controller

@enduml