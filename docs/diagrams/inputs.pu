@startuml

title Input handling process

== suscribing ==
Scene --> Controller: suscribe(input, command)
activate Controller

Controller --> Controller.ControlHandler : addToFilter(input)
'activate Controller.ControlHandler

Controller --> Controller.Translator : addBinding(input, command)
'deactivate Controller.ControlHandler
'activate Controller.Translator

Scene <-- Controller
'deactivate Controller.Translator
deactivate Controller


== handle inputs and commands ==

Scene -> Controller : getQueue
activate Controller

Controller -> Controller.ControlHandler : handle
note right: ControlHandler is a Filter that checks if suscribed Input occurred
activate Controller.ControlHandler
Controller <- Controller.ControlHandler : filtered inputs
deactivate Controller.ControlHandler

Controller -> Controller.Translator : getCommand
activate Controller.Translator
Controller <- Controller.Translator : commands for inputs that occured
deactivate Controller.Translator

Scene <- Controller : queue of Command to perform
deactivate Controller

@enduml